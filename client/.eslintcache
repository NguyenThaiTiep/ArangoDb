[{"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\index.tsx":"1","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\app\\page\\Category\\index.tsx":"2","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\app\\page\\Bill\\index.tsx":"3","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\app\\page\\home\\index.tsx":"4","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\app\\page\\Compare\\index.tsx":"5","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\listBook\\index.mysql.tsx":"6","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\navbar\\index.tsx":"7","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\listCaterogy\\index.mysql.tsx":"8","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\pagination\\index.tsx":"9","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\seed\\index.tsx":"10","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\add\\index.tsx":"11","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\api\\book\\index.ts":"12","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\api\\index.ts":"13","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\add\\book.tsx":"14","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\api\\category\\index.mysql.ts":"15","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\listBill\\index.tsx":"16","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\api\\bill\\index.ts":"17","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\api\\index.mysql.ts":"18","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\listCaterogy\\index.tsx":"19","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\containers\\headerTable\\index.tsx":"20","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\listBill\\index.mysql.tsx":"21","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\listBook\\index.tsx":"22","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\api\\bill\\index.mysql.ts":"23"},{"size":532,"mtime":1606329555540,"results":"24","hashOfConfig":"25"},{"size":541,"mtime":1606470039783,"results":"26","hashOfConfig":"25"},{"size":509,"mtime":1606470039672,"results":"27","hashOfConfig":"25"},{"size":448,"mtime":1606470039685,"results":"28","hashOfConfig":"25"},{"size":1008,"mtime":1606470039814,"results":"29","hashOfConfig":"25"},{"size":9322,"mtime":1606471254954,"results":"30","hashOfConfig":"25"},{"size":1263,"mtime":1606470407246,"results":"31","hashOfConfig":"25"},{"size":8084,"mtime":1606471135691,"results":"32","hashOfConfig":"25"},{"size":3288,"mtime":1606470407398,"results":"33","hashOfConfig":"25"},{"size":5343,"mtime":1606470407552,"results":"34","hashOfConfig":"25"},{"size":3111,"mtime":1606470407573,"results":"35","hashOfConfig":"25"},{"size":924,"mtime":1606447409058,"results":"36","hashOfConfig":"25"},{"size":795,"mtime":1606470039563,"results":"37","hashOfConfig":"25"},{"size":6396,"mtime":1606470407344,"results":"38","hashOfConfig":"25"},{"size":924,"mtime":1606469784928,"results":"39","hashOfConfig":"25"},{"size":9170,"mtime":1606471020942,"results":"40","hashOfConfig":"25"},{"size":753,"mtime":1606469785045,"results":"41","hashOfConfig":"25"},{"size":786,"mtime":1606470039623,"results":"42","hashOfConfig":"25"},{"size":6393,"mtime":1606470039768,"results":"43","hashOfConfig":"25"},{"size":1707,"mtime":1606470407264,"results":"44","hashOfConfig":"25"},{"size":9305,"mtime":1606470634283,"results":"45","hashOfConfig":"25"},{"size":9244,"mtime":1606471135709,"results":"46","hashOfConfig":"25"},{"size":742,"mtime":1606469784913,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1u1jnpb",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\index.tsx",[],["100","101"],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\app\\page\\Category\\index.tsx",["102"],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\app\\page\\Bill\\index.tsx",["103"],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\app\\page\\home\\index.tsx",[],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\app\\page\\Compare\\index.tsx",[],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\listBook\\index.mysql.tsx",["104","105"],"import {faEdit, faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Button, ButtonGroup, Form, Modal, Table} from \"react-bootstrap\";\r\nimport {BookAPIMysql} from \"src/api/book/index.mysql\";\r\nimport {handleToast} from \"src/app/page/toast\";\r\n\r\nimport {HeaderTable} from \"../../containers/headerTable\";\r\nimport {PaginationItem} from \"../pagination\";\r\nimport \"./style.scss\";\r\nexport const ListBookMysql = () => {\r\n    const [page, setPage] = useState({\r\n        page: 1,\r\n        take: 10,\r\n        skip: 0,\r\n        total: 100,\r\n        key_search: \"\",\r\n    });\r\n    const [timeQuery, setTimeQuery] = useState(0);\r\n    const [bookSelect, setBookSelect] = useState({\r\n        name: null,\r\n        id: null,\r\n        description: null,\r\n        categoryName: null,\r\n        author: null,\r\n        categoryId: null,\r\n        amount: null,\r\n    });\r\n    const [total, setTotal] = useState(0);\r\n    const [books, setBooks] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (item: any) => {\r\n        setBookSelect(item);\r\n\r\n        setShow(true);\r\n    };\r\n    const handleChangePage = (pageNumber: any) => {\r\n        setPage({...page, page: pageNumber, skip: (pageNumber - 1) * page.take});\r\n    };\r\n    const searchOnChange = (key: string) => {\r\n        setPage({...page, page: 1, skip: 0, key_search: key || \"\"});\r\n    };\r\n    const removeBook = (key: number) => {\r\n        BookAPIMysql.remove(key).then((res) => {\r\n            handleToast(res.data.status, res.data.time);\r\n            setPage({...page});\r\n        });\r\n    };\r\n    const updateBook = () => {\r\n        BookAPIMysql.update({\r\n            id: (bookSelect as any).id,\r\n            name: (bookSelect as any).name,\r\n            description: (bookSelect as any).descriprtion,\r\n            author: (bookSelect as any).author,\r\n            amount: (bookSelect as any).amount,\r\n        }).then((res) => {\r\n            handleToast(res.data.status, res.data.time);\r\n            if (res.data.status == 200) {\r\n                setTimeQuery(res.data.time);\r\n                setPage({...page});\r\n                setShow(false);\r\n            }\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        BookAPIMysql.getListBook(page.take, page.skip, page.key_search).then(\r\n            (res) => {\r\n                if (res.data.status == 200) {\r\n                    let books = res.data.result.result;\r\n                    setBooks(books);\r\n                    setTimeQuery(res.data.time);\r\n                    setTotal(res.data.result.count);\r\n                }\r\n            }\r\n        );\r\n    }, [page]);\r\n    return (\r\n        <div className=\"list-item\">\r\n            <HeaderTable\r\n                searchKeyOnChange={searchOnChange}\r\n                total={total}\r\n                timeQuery={timeQuery}\r\n                title={\"MySql\"}\r\n            />\r\n            <div className=\"table-box\">\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                    <tr className={\"text-center\"}>\r\n                        <th>#</th>\r\n                        <th>Mã</th>\r\n                        <th>Tên sách</th>\r\n                        <th>Thể loại</th>\r\n                        <th>Tác giả</th>\r\n                        <th>Mô tả</th>\r\n                        <th>Giá</th>\r\n                        <th>SL</th>\r\n                        <th>#</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {books.length > 0\r\n                        ? books.map((item, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{index + (page.page - 1) * page.take + 1}</td>\r\n                                    <td>{(item as any).id}</td>\r\n                                    <td>{(item as any).name}</td>\r\n                                    <td>{(item as any).category?.name}</td>\r\n                                    <td>{(item as any).author}</td>\r\n                                    <td>{(item as any).description}</td>\r\n                                    <td>{(item as any).price}</td>\r\n                                    <td>{(item as any).amount}</td>\r\n                                    <td>\r\n                                        <ButtonGroup>\r\n                                            <div\r\n                                                className={\"icon-item\"}\r\n                                                onClick={() => handleShow(item)}\r\n                                            >\r\n                                                <FontAwesomeIcon icon={faEdit} color={\"green\"}/>\r\n                                            </div>\r\n                                            <div\r\n                                                className={\"icon-item\"}\r\n                                                onClick={() => {\r\n                                                    removeBook((item as any).id);\r\n                                                }}\r\n                                            >\r\n                                                <FontAwesomeIcon icon={faTrash} color={\"red\"}/>\r\n                                            </div>\r\n                                        </ButtonGroup>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })\r\n                        : null}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <div className={\"page\"}>\r\n                <PaginationItem\r\n                    pageActive={page.page}\r\n                    lastPage={Math.ceil(total / page.take)}\r\n                    handleChangePage={handleChangePage}\r\n                />\r\n            </div>\r\n            <Modal show={show}>\r\n                <Modal.Header closeButton onClick={handleClose}>\r\n                    <Modal.Title className=\"text-center\">\r\n                        Chỉnh sửa thông tin Sách\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Tên Sách</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={(bookSelect as any).name}\r\n                                onChange={(e: any) => {\r\n                                    setBookSelect({\r\n                                        ...bookSelect,\r\n                                        name: e.target.value,\r\n                                    });\r\n                                }}\r\n                            />\r\n                            <Form.Label>Mô tả</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=\"text\"\r\n                                value={(bookSelect as any).description}\r\n                                onChange={(e: any) => {\r\n                                    setBookSelect({\r\n                                        ...bookSelect,\r\n                                        description: e.target.value,\r\n                                    });\r\n                                }}\r\n                            />{\" \"}\r\n                            <Form.Label>Tác giả</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"text\"\r\n                                value={(bookSelect as any).author}\r\n                                onChange={(e: any) => {\r\n                                    setBookSelect({\r\n                                        ...bookSelect,\r\n                                        author: e.target.value,\r\n                                    });\r\n                                }}\r\n                            />\r\n                            <Form.Label>Số lượng</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"text\"\r\n                                value={(bookSelect as any).amount}\r\n                                onChange={(e: any) => {\r\n                                    setBookSelect({\r\n                                        ...bookSelect,\r\n                                        amount: e.target.value,\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Thoát\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={updateBook}>\r\n                        Lưu\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\navbar\\index.tsx",[],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\listCaterogy\\index.mysql.tsx",["106"],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\pagination\\index.tsx",["107","108","109","110"],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\seed\\index.tsx",["111","112","113","114","115","116","117"],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\add\\index.tsx",["118","119"],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\api\\book\\index.ts",[],["120","121"],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\api\\index.ts",[],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\add\\book.tsx",["122","123"],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\api\\category\\index.mysql.ts",[],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\listBill\\index.tsx",["124","125"],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\api\\bill\\index.ts",["126"],"import API from \"..\";\r\n\r\nconst getListBill = (take: number, skip: number, key_search: string) => {\r\n    return API.get(\"/bill\", {\r\n        params: {\r\n            skip: skip,\r\n            take: take,\r\n            key: key_search,\r\n        },\r\n    });\r\n};\r\nconst removeById = (id: string) => {\r\n    return API.delete(\"/bill/remove\", {params: {id: id}});\r\n};\r\nconst update = (input: {\r\n    customerName?: string;\r\n    customerPhoneNumber?: string;\r\n    description?: string;\r\n    _key?: string;\r\n}) => {\r\n    return API.put(\"/bill\", {input: input});\r\n};\r\nconst seedData = (amount: number) => {\r\n    return API.get(\"/bill/seed\", {params: {amount: amount}});\r\n};\r\nconst add = () => {\r\n};\r\nexport const BillApi = {getListBill, removeById, update, seedData};\r\n","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\api\\index.mysql.ts",[],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\listCaterogy\\index.tsx",["127"],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\containers\\headerTable\\index.tsx",[],"C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\listBill\\index.mysql.tsx",["128","129"],"import {faEdit, faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Button, ButtonGroup, Form, Modal, Table} from \"react-bootstrap\";\r\nimport {HeaderTable} from \"../../containers/headerTable\";\r\nimport {PaginationItem} from \"../pagination\";\r\nimport \"./style.scss\";\r\nimport {handleToast} from \"../../app/page/toast\";\r\n\r\nimport Moment from \"react-moment\";\r\nimport {BillAPI_MYSQL} from \"src/api/bill/index.mysql\";\r\nexport const ListBillMysql = () => {\r\n    const [page, setPage] = useState({\r\n        page: 1,\r\n        take: 5,\r\n        skip: 0,\r\n        total: 100,\r\n        key_search: \"\",\r\n    });\r\n    const [timeQuery, setTimeQuery] = useState(0);\r\n    const [billSelect, setBillSelect] = useState({\r\n        id: null,\r\n        description: null,\r\n        customerName: null,\r\n        customerPhoneNumber: null,\r\n        totalPrice: null,\r\n        date: null,\r\n        product: null,\r\n    });\r\n    const [total, setTotal] = useState(0);\r\n    const [bills, setBills] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (item: any) => {\r\n        setBillSelect(item);\r\n        setShow(true);\r\n    };\r\n    const handleChangePage = (pageNumber: any) => {\r\n        setPage({...page, page: pageNumber, skip: (pageNumber - 1) * page.take});\r\n    };\r\n    const searchOnChange = (key: string) => {\r\n        setPage({...page, page: 1, skip: 0, key_search: key});\r\n    };\r\n    const updateBook = () => {\r\n    };\r\n    const removeById = (id: string) => {\r\n        BillAPI_MYSQL.removeById(id).then((res) => {\r\n            handleToast(res.data.status, res.data.time);\r\n            setPage({...page});\r\n            setTimeQuery(res.data.time);\r\n        });\r\n    };\r\n    const update = () => {\r\n        BillAPI_MYSQL.update({\r\n            customerName: (billSelect as any).customerName as string,\r\n            customerPhoneNumber: (billSelect as any).customerPhoneNumber as string,\r\n            id: (billSelect as any).id,\r\n            description: (billSelect as any).description,\r\n        }).then((res) => {\r\n            handleToast(res.data.status, res.data.time);\r\n            setPage({...page});\r\n            setShow(false);\r\n            setTimeQuery(res.data.time);\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        BillAPI_MYSQL.getListBill(page.take, page.skip, page.key_search).then(\r\n            (res) => {\r\n                if (res.data.status == 200) {\r\n                    let bills = res.data.result.result;\r\n                    setBills(bills);\r\n                    setTimeQuery(res.data.time);\r\n                    setTotal(res.data.result.count);\r\n                }\r\n            }\r\n        );\r\n    }, [page]);\r\n    return (\r\n        <div className=\"list-item\">\r\n            <HeaderTable\r\n                searchKeyOnChange={searchOnChange}\r\n                total={total}\r\n                timeQuery={timeQuery}\r\n                title={\"MySql\"}\r\n            />\r\n            <div className=\"table-box\">\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                    <tr className={\"text-center\"}>\r\n                        <th>#</th>\r\n                        <th>Mã</th>\r\n                        <th>Tên Khách Hàng</th>\r\n                        <th>Số điện thoại</th>\r\n                        <th>Mô tả</th>\r\n                        <th>Tổng giá trị</th>\r\n                        <th>Thời gian</th>\r\n                        <th>Tổng Sản phẩm</th>\r\n                        <th>#</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {bills.length > 0\r\n                        ? bills.map((item, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{index + (page.page - 1) * page.take + 1}</td>\r\n                                    <td>{(item as any).id}</td>\r\n                                    <td>{(item as any).customerName}</td>\r\n                                    <td>{(item as any).customerPhoneNumber}</td>\r\n                                    <td>{(item as any).description}</td>\r\n                                    <td>{(item as any).totalPrice}</td>\r\n                                    <td>\r\n                                        <Moment format=\"dd mm yyyy\">\r\n                                            {(item as any).date}\r\n                                        </Moment>\r\n                                    </td>\r\n                                    <td>\r\n                                        {((item as any).books as []).map((book) => {\r\n                                            return <li> {(book as any).name}</li>;\r\n                                        })}\r\n                                    </td>\r\n                                    <td>\r\n                                        <ButtonGroup>\r\n                                            <div\r\n                                                className={\"icon-item\"}\r\n                                                onClick={() => handleShow(item)}\r\n                                            >\r\n                                                <FontAwesomeIcon icon={faEdit} color={\"green\"}/>\r\n                                            </div>\r\n                                            <div className={\"icon-item\"}>\r\n                                                <FontAwesomeIcon\r\n                                                    icon={faTrash}\r\n                                                    color={\"red\"}\r\n                                                    onClick={() => removeById((item as any).id)}\r\n                                                />\r\n                                            </div>\r\n                                        </ButtonGroup>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })\r\n                        : null}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <div className={\"page\"}>\r\n                <PaginationItem\r\n                    pageActive={page.page}\r\n                    lastPage={Math.ceil(total / page.take)}\r\n                    handleChangePage={handleChangePage}\r\n                />\r\n            </div>\r\n            <Modal show={show}>\r\n                <Modal.Header closeButton onClick={handleClose}>\r\n                    <Modal.Title className=\"text-center\">\r\n                        Chỉnh sửa thông tin Hóa đơn\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Tên Khách Hàng</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={(billSelect as any).customerName}\r\n                                onChange={(e: any) => {\r\n                                    setBillSelect({\r\n                                        ...billSelect,\r\n                                        customerName: e.target.value,\r\n                                    });\r\n                                }}\r\n                            />\r\n                            <Form.Label>Số điện thoại Khách Hàng</Form.Label>\r\n                            <Form.Control\r\n                                type=\"phone\"\r\n                                placeholder=\"text\"\r\n                                value={(billSelect as any).customerPhoneNumber}\r\n                                onChange={(e: any) => {\r\n                                    setBillSelect({\r\n                                        ...billSelect,\r\n                                        customerPhoneNumber: e.target.value,\r\n                                    });\r\n                                }}\r\n                            />\r\n                            <Form.Label>Mô tả</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=\"text\"\r\n                                value={(billSelect as any).description}\r\n                                onChange={(e: any) => {\r\n                                    setBillSelect({\r\n                                        ...billSelect,\r\n                                        description: e.target.value,\r\n                                    });\r\n                                }}\r\n                            />{\" \"}\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Thoát\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={update}>\r\n                        Lưu\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\components\\listBook\\index.tsx",["130","131"],"import {faEdit, faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Button, ButtonGroup, Form, Modal, Table} from \"react-bootstrap\";\r\nimport {handleToast} from \"src/app/page/toast\";\r\nimport {BookAPI} from \"../../api/book\";\r\nimport {HeaderTable} from \"../../containers/headerTable\";\r\nimport {PaginationItem} from \"../pagination\";\r\nimport \"./style.scss\";\r\nexport const ListBook = () => {\r\n    const [page, setPage] = useState({\r\n        page: 1,\r\n        take: 10,\r\n        skip: 0,\r\n        total: 100,\r\n        key_search: \"\",\r\n    });\r\n    const [timeQuery, setTimeQuery] = useState(0);\r\n    const [bookSelect, setBookSelect] = useState({\r\n        name: null,\r\n        _key: null,\r\n        description: null,\r\n        categoryName: null,\r\n        author: null,\r\n        categoryId: null,\r\n        amount: null,\r\n    });\r\n    const [total, setTotal] = useState(0);\r\n    const [books, setBooks] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (item: any) => {\r\n        setBookSelect(item);\r\n\r\n        setShow(true);\r\n    };\r\n    const handleChangePage = (pageNumber: any) => {\r\n        setPage({...page, page: pageNumber, skip: (pageNumber - 1) * page.take});\r\n    };\r\n    const searchOnChange = (key: string) => {\r\n        setPage({...page, page: 1, skip: 0, key_search: key || \"\"});\r\n    };\r\n    const removeBook = (key: string) => {\r\n        BookAPI.remove(key).then((res) => {\r\n            handleToast(res.data.status, res.data.time);\r\n            setPage({...page});\r\n        });\r\n    };\r\n    const updateBook = () => {\r\n        BookAPI.update({\r\n            _key: (bookSelect as any)._key,\r\n            name: (bookSelect as any).name,\r\n            description: (bookSelect as any).descriprtion,\r\n            author: (bookSelect as any).author,\r\n            amount: (bookSelect as any).amount,\r\n        }).then((res) => {\r\n            handleToast(res.data.status, res.data.time);\r\n            if (res.data.status == 200) {\r\n                setTimeQuery(res.data.time);\r\n                setPage({...page});\r\n                setShow(false);\r\n            }\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        BookAPI.getListBook(page.take, page.skip, page.key_search).then((res) => {\r\n            if (res.data.status == 200) {\r\n                let books = res.data.result.result;\r\n                setBooks(books);\r\n                setTimeQuery(res.data.time);\r\n                setTotal(res.data.result.count);\r\n            }\r\n        });\r\n    }, [page]);\r\n    return (\r\n        <div className=\"list-item\">\r\n            <HeaderTable\r\n                searchKeyOnChange={searchOnChange}\r\n                total={total}\r\n                timeQuery={timeQuery}\r\n                title={\"ArangoDB\"}\r\n            />\r\n            <div className=\"table-box\">\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                    <tr className={\"text-center\"}>\r\n                        <th>#</th>\r\n                        <th>Mã</th>\r\n                        <th>Tên sách</th>\r\n                        <th>Thể loại</th>\r\n                        <th>Tác giả</th>\r\n                        <th>Mô tả</th>\r\n                        <th>Giá</th>\r\n                        <th>SL</th>\r\n                        <th>#</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {books.length > 0\r\n                        ? books.map((item, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{index + (page.page - 1) * page.take + 1}</td>\r\n                                    <td>{(item as any)._key}</td>\r\n                                    <td>{(item as any).name}</td>\r\n                                    <td>{(item as any).categoryName}</td>\r\n                                    <td>{(item as any).author}</td>\r\n                                    <td>{(item as any).description}</td>\r\n                                    <td>{(item as any).price}</td>\r\n                                    <td>{(item as any).amount}</td>\r\n                                    <td>\r\n                                        <ButtonGroup>\r\n                                            <div\r\n                                                className={\"icon-item\"}\r\n                                                onClick={() => handleShow(item)}\r\n                                            >\r\n                                                <FontAwesomeIcon icon={faEdit} color={\"green\"}/>\r\n                                            </div>\r\n                                            <div\r\n                                                className={\"icon-item\"}\r\n                                                onClick={() => {\r\n                                                    removeBook((item as any)._key);\r\n                                                }}\r\n                                            >\r\n                                                <FontAwesomeIcon icon={faTrash} color={\"red\"}/>\r\n                                            </div>\r\n                                        </ButtonGroup>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })\r\n                        : null}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <div className={\"page\"}>\r\n                <PaginationItem\r\n                    pageActive={page.page}\r\n                    lastPage={Math.ceil(total / page.take)}\r\n                    handleChangePage={handleChangePage}\r\n                />\r\n            </div>\r\n            <Modal show={show}>\r\n                <Modal.Header closeButton onClick={handleClose}>\r\n                    <Modal.Title className=\"text-center\">\r\n                        Chỉnh sửa thông tin Sách\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Tên Sách</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={(bookSelect as any).name}\r\n                                onChange={(e: any) => {\r\n                                    setBookSelect({\r\n                                        ...bookSelect,\r\n                                        name: e.target.value,\r\n                                    });\r\n                                }}\r\n                            />\r\n                            <Form.Label>Mô tả</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=\"text\"\r\n                                value={(bookSelect as any).description}\r\n                                onChange={(e: any) => {\r\n                                    setBookSelect({\r\n                                        ...bookSelect,\r\n                                        description: e.target.value,\r\n                                    });\r\n                                }}\r\n                            />{\" \"}\r\n                            <Form.Label>Tác giả</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"text\"\r\n                                value={(bookSelect as any).author}\r\n                                onChange={(e: any) => {\r\n                                    setBookSelect({\r\n                                        ...bookSelect,\r\n                                        author: e.target.value,\r\n                                    });\r\n                                }}\r\n                            />\r\n                            <Form.Label>Số lượng</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"text\"\r\n                                value={(bookSelect as any).amount}\r\n                                onChange={(e: any) => {\r\n                                    setBookSelect({\r\n                                        ...bookSelect,\r\n                                        amount: e.target.value,\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Thoát\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={updateBook}>\r\n                        Lưu\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n","C:\\Users\\phong\\Desktop\\ArangoDb\\client\\src\\api\\bill\\index.mysql.ts",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":7,"column":11,"nodeType":"138","messageId":"139","endLine":7,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":7,"column":11,"nodeType":"138","messageId":"139","endLine":7,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":60,"column":33,"nodeType":"142","messageId":"143","endLine":60,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":70,"column":37,"nodeType":"142","messageId":"143","endLine":70,"endColumn":39},{"ruleId":"140","severity":1,"message":"141","line":65,"column":33,"nodeType":"142","messageId":"143","endLine":65,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":23,"column":42,"nodeType":"142","messageId":"143","endLine":23,"endColumn":44},{"ruleId":"140","severity":1,"message":"144","line":29,"column":37,"nodeType":"142","messageId":"143","endLine":29,"endColumn":39},{"ruleId":"140","severity":1,"message":"141","line":62,"column":38,"nodeType":"142","messageId":"143","endLine":62,"endColumn":40},{"ruleId":"140","severity":1,"message":"141","line":80,"column":42,"nodeType":"142","messageId":"143","endLine":80,"endColumn":44},{"ruleId":"140","severity":1,"message":"141","line":21,"column":20,"nodeType":"142","messageId":"143","endLine":21,"endColumn":22},{"ruleId":"140","severity":1,"message":"144","line":38,"column":33,"nodeType":"142","messageId":"143","endLine":38,"endColumn":35},{"ruleId":"140","severity":1,"message":"144","line":45,"column":33,"nodeType":"142","messageId":"143","endLine":45,"endColumn":35},{"ruleId":"140","severity":1,"message":"144","line":54,"column":33,"nodeType":"142","messageId":"143","endLine":54,"endColumn":35},{"ruleId":"140","severity":1,"message":"144","line":61,"column":33,"nodeType":"142","messageId":"143","endLine":61,"endColumn":35},{"ruleId":"140","severity":1,"message":"144","line":70,"column":33,"nodeType":"142","messageId":"143","endLine":70,"endColumn":35},{"ruleId":"140","severity":1,"message":"144","line":77,"column":33,"nodeType":"142","messageId":"143","endLine":77,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":20,"column":33,"nodeType":"142","messageId":"143","endLine":20,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":27,"column":33,"nodeType":"142","messageId":"143","endLine":27,"endColumn":35},{"ruleId":"132","replacedBy":"145"},{"ruleId":"134","replacedBy":"146"},{"ruleId":"140","severity":1,"message":"141","line":36,"column":33,"nodeType":"142","messageId":"143","endLine":36,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":50,"column":33,"nodeType":"142","messageId":"143","endLine":50,"endColumn":35},{"ruleId":"136","severity":1,"message":"147","line":45,"column":11,"nodeType":"138","messageId":"139","endLine":45,"endColumn":21},{"ruleId":"140","severity":1,"message":"141","line":69,"column":33,"nodeType":"142","messageId":"143","endLine":69,"endColumn":35},{"ruleId":"136","severity":1,"message":"148","line":26,"column":7,"nodeType":"138","messageId":"139","endLine":26,"endColumn":10},{"ruleId":"140","severity":1,"message":"141","line":65,"column":29,"nodeType":"142","messageId":"143","endLine":65,"endColumn":31},{"ruleId":"136","severity":1,"message":"147","line":45,"column":11,"nodeType":"138","messageId":"139","endLine":45,"endColumn":21},{"ruleId":"140","severity":1,"message":"141","line":70,"column":37,"nodeType":"142","messageId":"143","endLine":70,"endColumn":39},{"ruleId":"140","severity":1,"message":"141","line":59,"column":33,"nodeType":"142","messageId":"143","endLine":59,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":68,"column":33,"nodeType":"142","messageId":"143","endLine":68,"endColumn":35},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"@typescript-eslint/no-unused-vars","'Props' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["149"],["150"],"'updateBook' is assigned a value but never used.","'add' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]