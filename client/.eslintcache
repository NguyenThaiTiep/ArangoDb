[{"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\app\\App.tsx":"1","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\listBill\\index.tsx":"2","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\index.ts":"3","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\index.tsx":"4","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\listCaterogy\\index.tsx":"5","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\listBook\\index.tsx":"6","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\bill\\index.ts":"7","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\pagination\\index.tsx":"8","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\containers\\headerTable\\index.tsx":"9","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\app\\page\\home\\index.tsx":"10","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\app\\page\\Category\\index.tsx":"11","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\app\\page\\Bill\\index.tsx":"12","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\index.mysq.ts":"13","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\listBill\\index.mysql.tsx":"14","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\book\\index.ts":"15","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\listBook\\index.mysql.tsx":"16","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\app\\page\\toast\\index.ts":"17","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\navbar\\index.tsx":"18","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\app\\page\\Compare\\index.tsx":"19","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\book\\index.mysql.ts":"20","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\category\\index.ts":"21","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\bill\\index.mysql.ts":"22"},{"size":1540,"mtime":1606395592060,"results":"23","hashOfConfig":"24"},{"size":7261,"mtime":1606392623359,"results":"25","hashOfConfig":"24"},{"size":989,"mtime":1606366577771,"results":"26","hashOfConfig":"24"},{"size":532,"mtime":1606366577778,"results":"27","hashOfConfig":"24"},{"size":6295,"mtime":1606388812643,"results":"28","hashOfConfig":"24"},{"size":6184,"mtime":1606394176861,"results":"29","hashOfConfig":"24"},{"size":577,"mtime":1606389029927,"results":"30","hashOfConfig":"24"},{"size":2605,"mtime":1606388095837,"results":"31","hashOfConfig":"24"},{"size":1405,"mtime":1606394774457,"results":"32","hashOfConfig":"24"},{"size":484,"mtime":1606397410158,"results":"33","hashOfConfig":"24"},{"size":462,"mtime":1606397406097,"results":"34","hashOfConfig":"24"},{"size":543,"mtime":1606397391975,"results":"35","hashOfConfig":"24"},{"size":983,"mtime":1606389110362,"results":"36","hashOfConfig":"24"},{"size":7363,"mtime":1606393947854,"results":"37","hashOfConfig":"24"},{"size":536,"mtime":1606394218883,"results":"38","hashOfConfig":"24"},{"size":5227,"mtime":1606392147358,"results":"39","hashOfConfig":"24"},{"size":772,"mtime":1606393879056,"results":"40","hashOfConfig":"24"},{"size":1115,"mtime":1606395582112,"results":"41","hashOfConfig":"24"},{"size":310,"mtime":1606395687234,"results":"42","hashOfConfig":"24"},{"size":294,"mtime":1606391806065,"results":"43","hashOfConfig":"24"},{"size":592,"mtime":1606366577771,"results":"44","hashOfConfig":"24"},{"size":616,"mtime":1606389719692,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bprarb",{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\app\\App.tsx",["95","96","97","98"],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\listBill\\index.tsx",["99","100"],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\index.ts",[],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\index.tsx",[],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\listCaterogy\\index.tsx",["101"],"import { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, ButtonGroup, Form, Modal, Table } from \"react-bootstrap\";\r\nimport { CategoryApi } from \"../../api/category\";\r\nimport { handelToast } from \"../../app/page/toast\";\r\nimport { HeaderTable } from \"../../containers/headerTable\";\r\nimport { PaginationItem } from \"../pagination\";\r\nimport \"./style.scss\";\r\n\r\ninterface Props {}\r\n\r\nexport const ListCategory = (props: Props) => {\r\n  const [page, setPage] = useState({\r\n    page: 1,\r\n    take: 10,\r\n    skip: 0,\r\n    total: 100,\r\n    key_search: \"\",\r\n  });\r\n  const [timeQuery, setTimeQuery] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n  const [categorySelect, setCategorySelect] = useState({\r\n    name: null,\r\n    _key: null,\r\n    description: null,\r\n    categoryName: null,\r\n    categoryId: null,\r\n    amount: null,\r\n  });\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (item: any) => {\r\n    setCategorySelect(item);\r\n    setShow(true);\r\n  };\r\n  const [total, setTotal] = useState(0);\r\n  const handelChangePage = (pageNumber: any) => {\r\n    setPage({ ...page, page: pageNumber, skip: (pageNumber - 1) * page.take });\r\n  };\r\n  const searchOnChange = (key: string) => {\r\n    setPage({ ...page, page: 0, skip: 0, key_search: key });\r\n  };\r\n  const [categories, setCategories] = useState([]);\r\n  const removeById = (id: string) => {\r\n    CategoryApi.removeById(id).then((res) => {\r\n      handelToast(res.data.status);\r\n      setPage({ ...page });\r\n    });\r\n  };\r\n  const update = () => {\r\n    CategoryApi.update({\r\n      name: (categorySelect as any).name as string,\r\n      _key: (categorySelect as any)._key as string,\r\n      description: (categorySelect as any).description,\r\n    }).then((res) => {\r\n      handelToast(res.data.status);\r\n      setTimeQuery(res.data.time);\r\n      setPage({ ...page });\r\n      setShow(false);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    CategoryApi.getListCategory(page.take, page.skip, page.key_search).then(\r\n      (res) => {\r\n        if (res.data.status == 200) {\r\n          let categories = res.data.result.result;\r\n          setCategories(categories);\r\n          setTotal(res.data.result.count);\r\n        }\r\n      }\r\n    );\r\n  }, [page]);\r\n  return (\r\n    <div className=\"list-item\">\r\n      <HeaderTable\r\n        searchKeyOnChange={searchOnChange}\r\n        total={total}\r\n        timeQuery={timeQuery}\r\n      />\r\n      <div className=\"table-box\">\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr className=\"text-center\">\r\n              <th>#</th>\r\n              <th>Mã</th>\r\n              <th>Tên</th>\r\n              <th>Mô tả</th>\r\n              <th>SL</th>\r\n              <th>#</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {categories.length > 0\r\n              ? categories.map((item, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{(item as any)._key}</td>\r\n                      <td>{(item as any).name}</td>\r\n                      <td>{(item as any).description}</td>\r\n                      <td>{(item as any).amount}</td>\r\n                      <td>\r\n                        <ButtonGroup>\r\n                          <div\r\n                            className={\"icon-item\"}\r\n                            onClick={() => handleShow(item)}\r\n                          >\r\n                            <FontAwesomeIcon icon={faEdit} color={\"green\"} />\r\n                          </div>\r\n                          <div className={\"icon-item\"}>\r\n                            <FontAwesomeIcon\r\n                              icon={faTrash}\r\n                              color={\"red\"}\r\n                              onClick={() => removeById((item as any)._key)}\r\n                            />\r\n                          </div>\r\n                        </ButtonGroup>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <div className={\"page\"}>\r\n        <PaginationItem\r\n          pageActive={page.page}\r\n          lastPage={Math.ceil(total / page.take)}\r\n          handelChangePage={handelChangePage}\r\n        />\r\n      </div>\r\n      <Modal show={show}>\r\n        <Modal.Header closeButton onClick={handleClose}>\r\n          <Modal.Title className=\"text-center\">\r\n            Chỉnh sửa thông tin Sách\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Tên Thể loại</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                onChange={(e: any) => {\r\n                  setCategorySelect({\r\n                    ...categorySelect,\r\n                    name: e.target.value,\r\n                  });\r\n                }}\r\n                value={(categorySelect as any).name}\r\n              />\r\n              <Form.Label>Mô tả</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                placeholder=\"text\"\r\n                onChange={(e: any) => {\r\n                  setCategorySelect({\r\n                    ...categorySelect,\r\n                    description: e.target.value,\r\n                  });\r\n                }}\r\n                value={(categorySelect as any).description}\r\n              />{\" \"}\r\n              <Form.Label>Số lượng</Form.Label>\r\n              <Form.Control\r\n                disabled\r\n                type=\"text\"\r\n                placeholder=\"text\"\r\n                value={(categorySelect as any).amount}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Thoát\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              update();\r\n            }}\r\n          >\r\n            Lưu\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\listBook\\index.tsx",["102","103","104","105"],"import { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, ButtonGroup, Form, Modal, Table } from \"react-bootstrap\";\r\nimport { handelToast } from \"src/app/page/toast\";\r\nimport { BookAPI } from \"../../api/book\";\r\nimport { HeaderTable } from \"../../containers/headerTable\";\r\nimport { PaginationItem } from \"../pagination\";\r\nimport \"./style.scss\";\r\n\r\ninterface Props {}\r\n\r\nexport const ListBook = (props: Props) => {\r\n  const [page, setPage] = useState({\r\n    page: 1,\r\n    take: 10,\r\n    skip: 0,\r\n    total: 100,\r\n    key_search: \"\",\r\n  });\r\n  const [timeQuery, setTimeQuery] = useState(0);\r\n  const [bookSelect, setBookSelect] = useState({\r\n    name: null,\r\n    _key: null,\r\n    description: null,\r\n    categoryName: null,\r\n    author: null,\r\n    categoryId: null,\r\n    amount: null,\r\n  });\r\n  const [total, setTotal] = useState(0);\r\n  const [books, setBooks] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (item: any) => {\r\n    setBookSelect(item);\r\n\r\n    setShow(true);\r\n  };\r\n  const handelChangePage = (pageNumber: any) => {\r\n    setPage({ ...page, page: pageNumber, skip: (pageNumber - 1) * page.take });\r\n  };\r\n  const searchOnChange = (key: string) => {\r\n    setPage({ ...page, page: 1, skip: 0, key_search: key || \"\" });\r\n  };\r\n  const removeBook = (key: string) => {\r\n    \r\n  }\r\n  const updateBook = () => {\r\n    BookAPI.update({\r\n      _key: (bookSelect as any)._key,\r\n      name: (bookSelect as any).name,\r\n      description: (bookSelect as any).descriprtion,\r\n    }).then((res) => {\r\n      handelToast(res.data.status, res.data.time);\r\n      if (res.status == 200) {\r\n        setTimeQuery(res.data.time);\r\n        setPage({ ...page });\r\n        setShow(false);\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    BookAPI.getListBook(page.take, page.skip, page.key_search).then((res) => {\r\n      if (res.data.status == 200) {\r\n        let books = res.data.result.result;\r\n        setBooks(books);\r\n        setTimeQuery(res.data.time);\r\n        setTotal(res.data.result.count);\r\n      }\r\n    });\r\n  }, [page]);\r\n  return (\r\n    <div className=\"list-item\">\r\n      <HeaderTable\r\n        searchKeyOnChange={searchOnChange}\r\n        total={total}\r\n        timeQuery={timeQuery}\r\n      />\r\n      <div className=\"table-box\">\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr className={\"text-center\"}>\r\n              <th>#</th>\r\n              <th>Mã</th>\r\n              <th>Tên sách</th>\r\n              <th>Thể loại</th>\r\n              <th>Tác giả</th>\r\n              <th>Mô tả</th>\r\n              <th>Giá</th>\r\n              <th>SL</th>\r\n              <th>#</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {books.length > 0\r\n              ? books.map((item, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{index + (page.page - 1) * page.take + 1}</td>\r\n                      <td>{(item as any)._key}</td>\r\n                      <td>{(item as any).name}</td>\r\n                      <td>{(item as any).categoryName}</td>\r\n                      <td>{(item as any).author}</td>\r\n                      <td>{(item as any).description}</td>\r\n                      <td>{(item as any).price}</td>\r\n                      <td>{(item as any).amount}</td>\r\n                      <td>\r\n                        <ButtonGroup>\r\n                          <div\r\n                            className={\"icon-item\"}\r\n                            onClick={() => handleShow(item)}\r\n                          >\r\n                            <FontAwesomeIcon icon={faEdit} color={\"green\"} />\r\n                          </div>\r\n                          <div className={\"icon-item\"}>\r\n                            <FontAwesomeIcon icon={faTrash} color={\"red\"} />\r\n                          </div>\r\n                        </ButtonGroup>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <div className={\"page\"}>\r\n        <PaginationItem\r\n          pageActive={page.page}\r\n          lastPage={Math.ceil(total / page.take)}\r\n          handelChangePage={handelChangePage}\r\n        />\r\n      </div>\r\n      <Modal show={show}>\r\n        <Modal.Header closeButton onClick={handleClose}>\r\n          <Modal.Title className=\"text-center\">\r\n            Chỉnh sửa thông tin Sách\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Tên Sách</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={(bookSelect as any).name}\r\n                onChange={(e: any) => {\r\n                  setBookSelect({\r\n                    ...bookSelect,\r\n                    name: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n              <Form.Label>Mô tả</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                placeholder=\"text\"\r\n                value={(bookSelect as any).description}\r\n                onChange={(e: any) => {\r\n                  setBookSelect({\r\n                    ...bookSelect,\r\n                    description: e.target.value,\r\n                  });\r\n                }}\r\n              />{\" \"}\r\n              <Form.Label>Số lượng</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"text\"\r\n                value={(bookSelect as any).amount}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Thoát\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={updateBook}>\r\n            Lưu\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\bill\\index.ts",[],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\pagination\\index.tsx",["106","107","108"],"import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport \"./style.scss\";\r\n\r\ninterface Props {\r\n  pageActive?: Number;\r\n  lastPage?: Number;\r\n  handelChangePage?: (page: any) => void;\r\n}\r\n\r\nexport const PaginationItem = (props: Props) => {\r\n  const { pageActive, lastPage, handelChangePage } = props;\r\n\r\n  const changePage = (page: any) => {\r\n    if (handelChangePage) {\r\n      handelChangePage(page);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"pageItem\">\r\n      <Pagination>\r\n        <Pagination.Prev\r\n          disabled={pageActive == 1}\r\n          onClick={() => {\r\n            changePage((pageActive as any) - 1);\r\n          }}\r\n        />\r\n        {(pageActive as any) >= (lastPage as any) - 1 ? (\r\n          <Pagination.Ellipsis />\r\n        ) : null}\r\n        {(pageActive as any) - 1 > 1 ? <Pagination.Ellipsis /> : null}\r\n        {(pageActive as any) === (lastPage as any) &&\r\n        (lastPage as any) - 2 > 0 ? (\r\n          <Pagination.Item\r\n            onClick={() => {\r\n              changePage((pageActive as any) - 2);\r\n            }}\r\n          >\r\n            {pageActive ? (pageActive as any) - 2 : 0}\r\n          </Pagination.Item>\r\n        ) : null}\r\n        {(pageActive as any) > 1 ? (\r\n          <Pagination.Item\r\n            onClick={() => {\r\n              changePage((pageActive as any) - 1);\r\n            }}\r\n          >\r\n            {pageActive ? (pageActive as any) - 1 : 0}\r\n          </Pagination.Item>\r\n        ) : null}\r\n        <Pagination.Item active>{pageActive}</Pagination.Item>\r\n        {(pageActive as any) < (lastPage as any) ? (\r\n          <Pagination.Item\r\n            onClick={() => {\r\n              changePage((pageActive as any) + 1);\r\n            }}\r\n          >\r\n            {(pageActive as any) + 1}\r\n          </Pagination.Item>\r\n        ) : null}{\" \"}\r\n        {(pageActive as any) == 1 &&\r\n        (pageActive as any) + 2 <= (lastPage as any) ? (\r\n          <Pagination.Item\r\n            onClick={() => {\r\n              changePage((pageActive as any) + 2);\r\n            }}\r\n          >\r\n            {(pageActive as any) + 2}\r\n          </Pagination.Item>\r\n        ) : null}{\" \"}\r\n        {(pageActive as any) + 1 < (lastPage as any) ? (\r\n          <Pagination.Ellipsis />\r\n        ) : null}\r\n        {(pageActive as any) + 3 < (lastPage as any) &&\r\n        (pageActive as any) <= 2 ? (\r\n          <Pagination.Ellipsis />\r\n        ) : null}\r\n        <Pagination.Next\r\n          disabled={pageActive == lastPage}\r\n          onClick={() => changePage((pageActive as any) + 1)}\r\n        />\r\n      </Pagination>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\containers\\headerTable\\index.tsx",["109","110"],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\app\\page\\home\\index.tsx",[],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\app\\page\\Category\\index.tsx",["111"],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\app\\page\\Bill\\index.tsx",["112"],"import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { BillAPI_MYSQL } from \"src/api/bill/index.mysql\";\r\nimport { ListBill } from \"src/components/listBill\";\r\nimport { ListBillMysql } from \"src/components/listBill/index.mysql\";\r\nimport { NavbarItem } from \"src/components/navbar\";\r\n\r\ninterface Props {}\r\n\r\nexport const Bill = (props: Props) => {\r\n  return (\r\n    <div>\r\n      <NavbarItem page={\"bill\"} />\r\n      <Container>\r\n        <ListBill />\r\n        <ListBillMysql />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\index.mysq.ts",[],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\listBill\\index.mysql.tsx",["113","114"],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\book\\index.ts",["115"],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\listBook\\index.mysql.tsx",["116","117"],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\app\\page\\toast\\index.ts",["118"],"import { toast } from \"react-toastify\";\r\n\r\nexport const handelToast = (code = 0, time?: number) => {\r\n  switch (code) {\r\n    case 100:\r\n    case 200:\r\n      success(time);\r\n      break;\r\n    case 300:\r\n    case 302:\r\n      founded();\r\n      break;\r\n    case 404:\r\n      notFounded();\r\n      break;\r\n    default:\r\n      error();\r\n      break;\r\n  }\r\n};\r\n\r\nfunction success(time?: number) {\r\n  toast.success(\"Thành công! \" + time + \"s\");\r\n}\r\n\r\nfunction error() {\r\n  toast.error(\"Thất bại!\");\r\n}\r\n\r\nfunction warn() {\r\n  toast.warn(\"Cần nhập đầy đủ thông tin !\");\r\n}\r\n\r\nfunction founded() {\r\n  toast.info(\"Sách hoặc mã sách đã tồn tại !\");\r\n}\r\n\r\nfunction notFounded() {\r\n  toast.info(\"Định dạng không đúng hoặc không tồn tại !\");\r\n}\r\n","C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\components\\navbar\\index.tsx",["119","120","121","122","123"],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\app\\page\\Compare\\index.tsx",[],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\book\\index.mysql.ts",[],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\category\\index.ts",[],"C:\\Users\\ADMIN\\Desktop\\ArangoDb\\client\\src\\api\\bill\\index.mysql.ts",[],{"ruleId":"124","severity":1,"message":"125","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":20},{"ruleId":"124","severity":1,"message":"128","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":18},{"ruleId":"124","severity":1,"message":"129","line":8,"column":10,"nodeType":"126","messageId":"127","endLine":8,"endColumn":22},{"ruleId":"124","severity":1,"message":"130","line":9,"column":10,"nodeType":"126","messageId":"127","endLine":9,"endColumn":18},{"ruleId":"124","severity":1,"message":"131","line":49,"column":9,"nodeType":"126","messageId":"127","endLine":49,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":73,"column":27,"nodeType":"134","messageId":"135","endLine":73,"endColumn":29},{"ruleId":"132","severity":1,"message":"133","line":65,"column":29,"nodeType":"134","messageId":"135","endLine":65,"endColumn":31},{"ruleId":"124","severity":1,"message":"136","line":47,"column":9,"nodeType":"126","messageId":"127","endLine":47,"endColumn":19},{"ruleId":"137","severity":2,"message":"138","line":48,"column":5,"nodeType":"139","messageId":"140","endLine":48,"endColumn":6},{"ruleId":"132","severity":1,"message":"133","line":57,"column":22,"nodeType":"134","messageId":"135","endLine":57,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":66,"column":27,"nodeType":"134","messageId":"135","endLine":66,"endColumn":29},{"ruleId":"132","severity":1,"message":"133","line":23,"column":32,"nodeType":"134","messageId":"135","endLine":23,"endColumn":34},{"ruleId":"132","severity":1,"message":"133","line":61,"column":30,"nodeType":"134","messageId":"135","endLine":61,"endColumn":32},{"ruleId":"132","severity":1,"message":"133","line":79,"column":32,"nodeType":"134","messageId":"135","endLine":79,"endColumn":34},{"ruleId":"124","severity":1,"message":"141","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":20},{"ruleId":"124","severity":1,"message":"142","line":3,"column":22,"nodeType":"126","messageId":"127","endLine":3,"endColumn":31},{"ruleId":"124","severity":1,"message":"128","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":18},{"ruleId":"124","severity":1,"message":"143","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":23},{"ruleId":"124","severity":1,"message":"131","line":50,"column":9,"nodeType":"126","messageId":"127","endLine":50,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":74,"column":29,"nodeType":"134","messageId":"135","endLine":74,"endColumn":31},{"ruleId":"124","severity":1,"message":"144","line":20,"column":7,"nodeType":"126","messageId":"127","endLine":20,"endColumn":13},{"ruleId":"124","severity":1,"message":"131","line":45,"column":9,"nodeType":"126","messageId":"127","endLine":45,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":49,"column":29,"nodeType":"134","messageId":"135","endLine":49,"endColumn":31},{"ruleId":"124","severity":1,"message":"145","line":30,"column":10,"nodeType":"126","messageId":"127","endLine":30,"endColumn":14},{"ruleId":"124","severity":1,"message":"146","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"147","line":3,"column":3,"nodeType":"126","messageId":"127","endLine":3,"endColumn":9},{"ruleId":"124","severity":1,"message":"148","line":5,"column":3,"nodeType":"126","messageId":"127","endLine":5,"endColumn":7},{"ruleId":"124","severity":1,"message":"149","line":6,"column":3,"nodeType":"126","messageId":"127","endLine":6,"endColumn":14},{"ruleId":"124","severity":1,"message":"150","line":17,"column":9,"nodeType":"126","messageId":"127","endLine":17,"endColumn":16},"@typescript-eslint/no-unused-vars","'NavbarItem' is defined but never used.","Identifier","unusedVar","'ListBook' is defined but never used.","'ListCategory' is defined but never used.","'ListBill' is defined but never used.","'updateBook' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'removeBook' is assigned a value but never used.","@typescript-eslint/no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","'useHistory' is defined but never used.","'useParams' is defined but never used.","'BillAPI_MYSQL' is defined but never used.","'remove' is assigned a value but never used.","'warn' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'history' is assigned a value but never used."]